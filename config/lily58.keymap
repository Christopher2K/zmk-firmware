#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/lily58.h"

#define DFT 0
#define LWR 1
#define RSE 2

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH1 LH0 RH0 RH1        


#define HM_TAPPING_TERM 300
#define HM_QUICK_TAP 175
#define HM_PRIOR_IDLE 150

// HOMEROW MODS
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    bindings = <&kp>, <&kp>;
    tapping-term-ms = <HM_TAPPING_TERM>;
    quick-tap-ms = <HM_QUICK_TAP>;
    require-prior-idle-ms = <HM_PRIOR_IDLE>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    bindings = <&kp>, <&kp>;
    tapping-term-ms = <HM_TAPPING_TERM>;
    quick-tap-ms = <HM_QUICK_TAP>;
    require-prior-idle-ms = <HM_PRIOR_IDLE>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
)

// Special config for shift keys
ZMK_HOLD_TAP(hmsl, 
    flavor = "balanced";
    tapping-term-ms = <HM_TAPPING_TERM_FAST>;
    quick-tap-ms = <HM_QUICK_TAP>;
    require-prior-idle-ms = <HM_PRIOR_IDLE>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmsr,
    flavor = "balanced";
    tapping-term-ms = <HM_TAPPING_TERM_FAST>;
    quick-tap-ms = <HM_QUICK_TAP>;
    require-prior-idle-ms = <HM_PRIOR_IDLE>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    bindings = <&kp>, <&kp>;
)

ZMK_LAYER(default_layer,
     // ╭───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────╮                                           ╭───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────╮
          &kp GRAVE           &kp N1              &kp N2              &kp N3              &kp N4              &kp N5                                                          &kp N6              &kp N7              &kp N8              &kp N9              &kp N0              &kp MINUS           
     // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                                           ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
          &kp EQUAL           &kp Q               &kp W               &kp E               &kp R               &kp T                                                           &kp Y               &kp U               &kp I               &kp O               &kp P               &kp BSLH            
     // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                                           ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
          &kp ESC             &hml LCTRL A        &hml LALT S         &hml LGUI D         &hmsl LSHFT F       &kp G                                                           &kp H               &hmsr RSHFT J       &hmr RGUI K         &hmr LALT L         &hmr RCTRL SEMI      &kp SQT             
     // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮   ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
          &kp LSHFT           &kp Z               &kp X               &kp C               &kp V               &kp B               &kp LBKT                &kp RBKT            &kp N               &kp M               &kp COMMA           &kp DOT             &kp FSLH            &kp LCTRL           
     // ╰───────────────────┴───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┼───────────────────┤   ├───────────────────┼───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────┴───────────────────╯
                                                                      &kp LALT            &kp LGUI            &mo LWR             &kp SPACE               &kp RET             &mo RSE             &kp BSPC            &kp TAB             
     //                                                             ╰───────────────────┴───────────────────┴───────────────────┴───────────────────╯   ╰───────────────────┴───────────────────┴───────────────────┴───────────────────╯
)

ZMK_LAYER(lower_layer,
      // ╭───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────╮                                           ╭───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────╮
           &bt BT_CLR          &bt BT_SEL 0        &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3        &bt BT_SEL 4                                                    &trans              &trans              &trans              &trans              &trans              &trans              
      // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                                           ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
           &trans              &kp N1              &kp N2              &kp N3              &kp N4              &kp N5                                                          &kp N6              &kp N7              &kp N8              &kp N9              &kp N0              &trans              
      // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                                           ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
           &trans              &trans              &trans              &trans              &trans              &trans                                                          &kp LEFT_ARROW      &kp DOWN_ARROW      &kp UP_ARROW        &kp RIGHT_ARROW     &trans              &trans              
      // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮   ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
           &trans              &trans              &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans              &trans              &trans              
      // ╰───────────────────┴───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┼───────────────────┤   ├───────────────────┼───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────┴───────────────────╯
                                                                       &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              
      //                                                             ╰───────────────────┴───────────────────┴───────────────────┴───────────────────╯   ╰───────────────────┴───────────────────┴───────────────────┴───────────────────╯
)

ZMK_LAYER(raise_layer,
      // ╭───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────╮                                           ╭───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────┬───────────────────╮
           &trans              &trans              &trans              &trans              &trans              &trans                                                            &trans              &trans              &trans              &trans              &trans              &trans              
      // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                                           ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
           &kp GRAVE           &kp N1              &kp N2              &kp N3              &kp N4              &kp N5                                                           &kp N6              &kp N7              &kp N8              &kp N9              &kp N0              &trans              
      // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                                           ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
           &kp F1              &kp F2              &kp F3              &kp F4              &kp F5              &kp F6                                                           &trans              &kp LEFT            &kp DOWN            &kp UP              &kp RIGHT           &trans              
      // ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮   ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤
           &kp F7              &kp F8              &kp F9              &kp F10             &kp F11             &kp F12             &trans                  &trans              &kp KP_PLUS         &kp MINUS           &kp EQUAL           &kp LBKT            &kp RBKT            &kp BSLH            
      // ╰───────────────────┴───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┼───────────────────┤   ├───────────────────┼───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────┴───────────────────╯
                                                                       &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              
      //                                                             ╰───────────────────┴───────────────────┴───────────────────┴───────────────────╯   ╰───────────────────┴───────────────────┴───────────────────┴───────────────────╯
)
